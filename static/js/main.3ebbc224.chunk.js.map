{"version":3,"sources":["reducers/projectReducer.js","components/Login.js","components/Profile.js","components/Nav.js","components/Playlist.js","components/Search.js","components/Home.js","components/Explore.js","components/Details.js","components/Main.js","services/ActionService.js","services/LoginService.js","containers/MainContainer.js","containers/Project.js","serviceWorker.js","index.js"],"names":["projectReducer","state","arguments","length","undefined","user","profile","profileLoaded","displayName","loggedIn","loading","playlists","savedPlaylists","exploreCards","action","type","console","log","Object","objectSpread","follows","items","explore","id","playlistId","Login","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emailChanged","event","setState","email","target","value","displayNameChanged","passwordChanged","password","roleChanged","role","toggleLogin","spacing","login","register","_this2","react_default","a","createElement","className","concat","react_router","to","htmlFor","placeholder","onChange","onClick","href","React","Component","Profile","toggleEdit","edit","paths","window","location","pathname","split","profileId","getProfile","followers","includes","follow","unfollow","updateUser","map","key","src","width","height","frameborder","allowtransparency","allow","origin","alt","Nav","react_router_dom","logout","Playlist","_ref","playlist","previewPlaylist","images","url","name","substring","owner","display_name","Search","queryChanged","query","userId","playlistName","redirect","search","searchPlaylists","urlQuery","align","components_Playlist","Home","exploreAnon","el","scrollIntoView","behavior","muted","loop","autoPlay","ref","Explore","exploreCard","back","addRemove","deletePlaylist","addPlaylist","decodeURI","Main","waitMessage","refreshJwt","setTimeout","basename","components_Nav","exact","path","render","Home_Home","Profile_Profile","Login_Login","Explore_Explore","Search_Search","Details_Search","ActionService","fetch","credentials","then","response","status","json","err","getFollows","method","getPlaylists","myInstance","LoginService","getUser","headers","Accept","Content-Type","body","JSON","stringify","actionService","getInstance","loginService","MainContainer","connect","dispatch","document","cookie","forEach","index","push","store","createStore","Project","es","containers_MainContainer","Boolean","hostname","match","ReactDOM","Project_Project","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ebbc224.chunk.js","sourcesContent":["const projectReducer = (state={\n    user: {}, profile: {}, profileLoaded: false, displayName: \"\", loggedIn: false, loading: true,\n    playlists: [], savedPlaylists: [], exploreCards: []}, action) => {\n    switch (action.type) {\n        case 'LOADING_COMPLETE':\n            console.log(\"Loading complete\");\n            return {\n                ...state,\n                loading: false\n            };\n        case 'LOADING':\n            console.log(\"Loading\");\n            return {\n                ...state,\n                loading: true\n            };\n        case 'LOG_IN':\n            console.log(\"Logging in user\");\n            console.log(action.user);\n            return {\n                ...state,\n                loggedIn: true,\n                user: action.user,\n                displayName: action.user.displayName\n            };\n        case 'LOG_OUT':\n            console.log(\"Logging out\");\n            return {\n                ...state,\n                loggedIn: false,\n                user: {},\n                displayName: \"\"\n            };\n        case 'SET_FOLLOWS':\n            console.log(\"Setting follows\");\n            console.log(action.follows);\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    follows: action.follows\n                }\n            };\n        case 'HIDE_PROFILE':\n            console.log(\"Hiding profile\");\n            return {\n                ...state,\n                profileLoaded: false\n            };\n        case 'LOAD_PROFILE':\n            console.log(\"Loading profile\");\n            console.log(action.profile);\n            return {\n                ...state,\n                profile: action.profile,\n                profileLoaded: true\n            };\n        case 'SEARCH_PLAYLISTS':\n            console.log(\"Searching playlists\");\n            console.log(action.playlists);\n            return {\n                ...state,\n                playlists: action.playlists.playlists.items\n            };\n        case 'SET_PLAYLISTS':\n            console.log(\"Setting playlists\");\n            console.log(action.playlists);\n            return {\n                ...state,\n                savedPlaylists: action.playlists\n            };\n        case 'SET_EXPLORE':\n            console.log(\"Setting explore\");\n            console.log(action.explore);\n            return {\n                ...state,\n                exploreCards: action.explore\n            };\n        case 'SET_EXPLORE_ANON':\n            console.log(\"Setting explore anon\");\n            return {\n                ...state,\n                exploreCards: [\n                    {\n                        displayName: \"buster\",\n                        id: \"1cbe7ee7-1553-4780-ac72-277cc437cf96\",\n                        playlistId: \"spotify-37i9dQZF1DX70RN3TfWWJh\"\n                    }\n                ]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default projectReducer","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport default class Login extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            login: true,\n            spacing: \"my-5\",\n            email: \"\",\n            password: \"\",\n            displayName: \"\",\n            role: \"LISTENER\"\n        };\n    }\n\n    emailChanged = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    displayNameChanged = (event) => {\n        this.setState({\n            displayName: event.target.value\n        })\n    };\n\n    passwordChanged = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    roleChanged = (event) => {\n        this.setState({\n            role: event.target.value\n        })\n    };\n\n    toggleLogin = () => {\n        const spacing = this.state.login? \"my-4\" : \"my-5\";\n\n        this.setState({\n            login: !this.state.login,\n            spacing: spacing\n        })\n    };\n\n    login = () => {\n        if (this.state.login) {\n            console.log(\"Logging in\");\n            this.props.login(this.state.email, this.state.password);\n        } else {\n            console.log(\"Registering\");\n            this.props.register(this.state.email,\n                                this.state.displayName,\n                                this.state.password,\n                                this.state.role);\n        }\n    };\n\n    render() {\n        return(\n            <div className={`row align-middle ${this.state.spacing}`}>\n\n                {\n                    this.props.loggedIn &&\n                    <Redirect to=\"/\" />\n                }\n\n                <div className=\"jumbotron bg-dark text-white border col-sm-12 offset-sm-0 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\n                    <h1 className=\"display-6 text-center\">\n                        {\n                            this.state.login && \"Sign in\"\n                        }\n                        {\n                            !this.state.login && \"Register\"\n                        }\n                    </h1>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">\n                                Email\n                            </label>\n                            <div className=\"col-sm-12\">\n                                <input\n                                    className=\"loginInput form-control\" id=\"email\" placeholder=\"foo@gmail.com\"\n                                    value={this.state.email}\n                                    onChange={this.emailChanged}\n                                />\n                            </div>\n                        </div>\n                        {\n                            !this.state.login &&\n                            <div className=\"form-group\">\n                                <label htmlFor=\"displayName\" className=\"col-sm-2 col-form-label\">\n                                    Username\n                                </label>\n                                <div className=\"col-sm-12\">\n                                    <input\n                                        className=\"loginInput form-control\" id=\"displayName\" placeholder=\"Alice\"\n                                        value={this.state.displayName}\n                                        onChange={this.displayNameChanged}\n                                    />\n                                </div>\n                            </div>\n                        }\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\n                                Password\n                            </label>\n                            <div className=\"col-sm-12\">\n                                <input type=\"password\" className=\"loginInput form-control wbdv-password-fld\"\n                                       id=\"password\" placeholder=\"123qwe#$%\"\n                                       value={this.state.password}\n                                       onChange={this.passwordChanged}\n                                />\n                            </div>\n                        </div>\n                        {\n                            !this.state.login &&\n                            <div className=\"form-group\">\n                                <label htmlFor=\"role\" className=\"col-sm-2 col-form-label\">\n                                    Role\n                                </label>\n                                <div className=\"col-sm-12\">\n                                    <select className=\"form-control\" id=\"role\"\n                                            value={this.state.role}\n                                            onChange={this.roleChanged}>\n                                        <option value=\"LISTENER\">Listener</option>\n                                        <option value=\"CURATOR\">Curator</option>\n                                    </select>\n                                </div>\n                            </div>\n                        }\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 col-form-label\"/>\n                            <div className=\"col-sm-12\">\n                                <button type=\"button\" className=\"btn btn-primary btn-block\"\n                                        onClick={() => this.login()}>\n                                    {\n                                        this.state.login && \"Sign in\"\n                                    }\n                                    {\n                                        !this.state.login && \"Register\"\n                                    }\n                                </button>\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        <a href=\"#\" className=\"float-left registerTag text-white\"\n                                           onClick={() => this.toggleLogin()}>\n                                            {\n                                                this.state.login && \"Register\"\n                                            }\n                                            {\n                                                !this.state.login && \"Sign in\"\n                                            }\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n}","import React from 'react'\n\nexport default class Profile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const pathname = window.location.pathname;\n        const paths = pathname.split('/');\n        const profileId = paths[3] === undefined? this.props.user.id : paths[3];\n\n        this.state = {\n            edit: false,\n            profileId: profileId,\n            email: this.props.user.email,\n            password: \"\",\n            displayName: this.props.user.displayName,\n            role: this.props.user.role\n        };\n\n        this.props.getProfile(this.state.profileId);\n    }\n\n    emailChanged = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    };\n\n    displayNameChanged = (event) => {\n        this.setState({\n            displayName: event.target.value\n        })\n    };\n\n    passwordChanged = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    };\n\n    roleChanged = (event) => {\n        this.setState({\n            role: event.target.value\n        })\n    };\n\n    toggleEdit = () => {\n        this.setState({\n            edit: !this.state.edit\n        })\n    };\n\n    render() {\n        return(\n            <div className=\"container\">\n                {\n                    this.props.profileLoaded &&\n                    <div>\n                        <div className=\"text-center\">\n                            <h1 className=\"text-white\">{this.props.profile.displayName}</h1>\n                            <div className=\"row justify-content-center\">\n                                <p className=\"text-white mr-4\">Followers: {this.props.profile.followers}</p>\n                                <p className=\"text-white\">Follows: {this.props.profile.follows}</p>\n                            </div>\n                            {\n                                (this.props.loggedIn && this.props.user.id !== this.state.profileId && !this.props.user.follows.includes(this.state.profileId)) &&\n                                <button className=\"btn btn-info mb-4\" onClick={() => this.props.follow(this.state.profileId)}>Follow</button>\n                            }\n                            {\n                                (this.props.loggedIn && this.props.user.id !== this.state.profileId && this.props.user.follows.includes(this.state.profileId)) &&\n                                <button className=\"btn btn-success mb-4\" onClick={() => this.props.unfollow(this.state.profileId)}>Following</button>\n                            }\n                            {\n                                !this.state.edit && (this.props.user.id === this.state.profileId || this.props.user.id === \"901ec7ab-e12f-43a4-84f4-9a95965ae600\") &&\n                                <button className=\"btn btn-success mb-4\" onClick={() => this.toggleEdit()}>Edit Profile</button>\n                            }\n                            {\n                                this.state.edit &&\n                                <div>\n                                    <div className=\"form-group row\">\n                                        <label\n                                            className=\"col-md-2 col-form-label form-control-label text-white\">Email</label>\n                                        <div className=\"col-md-4\">\n                                            <input className=\"loginInput form-control\" type=\"text\"\n                                                   value={this.state.email}\n                                                   onChange={this.emailChanged}/>\n                                        </div>\n                                        <label className=\"col-md-1 col-form-label form-control-label text-white\">Username</label>\n                                        <div className=\"col-md-5\">\n                                            <input className=\"loginInput form-control\" type=\"text\"\n                                                   value={this.state.displayName}\n                                                   onChange={this.displayNameChanged}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-md-2 col-form-label form-control-label text-white\">Password</label>\n                                        <div className=\"col-md-4\">\n                                            <input className=\"loginInput form-control\" type=\"password\"\n                                                   value={this.state.password}\n                                                   onChange={this.displayNameChanged} placeholder=\"New Password\"/>\n                                        </div>\n                                        <label\n                                            className=\"col-md-1 col-form-label form-control-label text-white\">Role</label>\n                                        <div className=\"col-md-5\">\n                                            <select className=\"form-control\" id=\"role\"\n                                                    value={this.state.role}\n                                                    onChange={this.roleChanged}>\n                                                <option value=\"LISTENER\">Listener</option>\n                                                <option value=\"CURATOR\">Curator</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <button type=\"button\" className=\"mb-3 btn btn-info btn-block\"\n                                            onClick={() => {\n                                                this.toggleEdit();\n                                                this.props.updateUser(this.props.user.id,\n                                                    this.state.email,\n                                                    this.state.displayName,\n                                                    this.state.password,\n                                                    this.state.role)\n                                            }}>\n                                        Update\n                                    </button>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"border-top\">\n                            {\n                                this.props.user.role === \"CURATOR\" && this.props.user.id === this.state.profileId && this.props.savedPlaylists.map(playlistId =>\n                                    <div key={playlistId} className=\"card mt-4\">\n                                        <iframe\n                                            src={`https://open.spotify.com/embed/user/${playlistId.split(\"-\")[0]}/playlist/${playlistId.split(\"-\")[1]}`}\n                                            width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\"\n                                            allow=\"encrypted-media\" className=\"w-100 playlist\"></iframe>\n                                        <div className=\"spinner-border playlist-spinner\" role=\"status\">\n                                            <span className=\"sr-only\">Loading...</span>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                            {\n                                this.props.user.id !== this.state.profileId && this.props.profile.playlists.map(playlistId =>\n                                    <div key={playlistId} className=\"card mt-4\">\n                                        <iframe\n                                            src={`https://open.spotify.com/embed/user/${playlistId.split(\"-\")[0]}/playlist/${playlistId.split(\"-\")[1]}`}\n                                            width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\"\n                                            allow=\"encrypted-media\" className=\"w-100 playlist\"></iframe>\n                                        <div className=\"spinner-border playlist-spinner\" role=\"status\">\n                                            <span className=\"sr-only\">Loading...</span>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                            {\n                                this.props.user.role === \"CURATOR\" && this.props.user.id === this.state.profileId && this.props.savedPlaylists.length === 0 &&\n                                <div className=\"card bg-dark text-black mt-4\">\n                                    <img className=\"card-img\" src={window.location.origin + '/smoke-client/playlist.jpg'} alt=\"Card image\"/>\n                                    <div className=\"card-img-overlay\">\n                                        <h5 className=\"card-title\">Interested in curating your own playlists?</h5>\n                                        <p className=\"card-text\">Use the search feature to find playlists to add to your curated list!</p>\n                                    </div>\n                                </div>\n                            }\n                            {\n                                this.props.user.role !== \"CURATOR\" && this.props.user.id === this.state.profileId &&\n                                <div className=\"card bg-dark text-black mt-4\">\n                                    <img className=\"card-img\" src={window.location.origin + '/smoke-client/playlist.jpg'} alt=\"Card image\"/>\n                                        <div className=\"card-img-overlay\">\n                                            <h5 className=\"card-title\">Interested in curating your own playlists?</h5>\n                                            <p className=\"card-text\">Change your role to Curator and start sharing your favorite playlists!</p>\n                                        </div>\n                                </div>\n                            }\n                            <div className=\"mb-4\">\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                <Link to=\"/\" className=\"navbar-brand\">Smoke</Link>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/explore\" className=\"nav-link\">Explore</Link>\n                        </li>\n                        {\n                            this.props.loggedIn &&\n                            <li className=\"nav-item\">\n                                <Link to=\"/profile\" className=\"nav-link\">My Profile</Link>\n                            </li>\n                        }\n                        {\n                            this.props.loggedIn && this.props.user.role === \"CURATOR\" &&\n                            <li className=\"nav-item\">\n                                <Link to=\"/search\" className=\"nav-link\">Search</Link>\n                            </li>\n                        }\n                    </ul>\n                    <div className=\"ml-auto mr-2\">\n                        {\n                            this.props.loggedIn &&\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active my-2 mr-1\">\n                                    <a className=\"text-white\">Welcome {this.props.displayName}</a>\n                                </li>\n                                <li className=\"nav-item active\">\n                                    <a className=\"col-4 nav-link\" onClick={this.props.logout}>\n                                        <i className=\"fa fa-sign-out\"></i>\n                                    </a>\n                                </li>\n                            </ul>\n                        }\n                        {\n                            !this.props.loggedIn &&\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active my-2 mr-1\">\n                                    <Link to=\"/login\" className=\"text-white\">Login / Register</Link>\n                                </li>\n                            </ul>\n                        }\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Nav","import React from 'react'\n\nconst Playlist = ({playlist, previewPlaylist}) =>\n    <div className=\"card cardItem\">\n        <img className=\"card-img-top\" src={playlist.images[0].url} alt=\"Card image cap\"/>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{playlist.name.length > 30? (playlist.name.substring(0, 27) + \"...\") : playlist.name}</h5>\n            <p className=\"card-text\">Creator: {playlist.owner.display_name}</p>\n            <a className=\"btn btn-primary text-white\" onClick={() => previewPlaylist(playlist.owner.id, playlist.name, playlist.id)}>Details</a>\n        </div>\n    </div>\n\nexport default Playlist","import React from 'react'\nimport Playlist from './Playlist'\nimport { Redirect } from 'react-router-dom'\n\nexport default class Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const pathname = window.location.pathname;\n        const paths = pathname.split('/');\n        const urlQuery = paths[3] === undefined? \"\" : paths[3];\n\n        this.state = {\n            query: urlQuery,\n        }\n\n        if (urlQuery) {\n            this.props.searchPlaylists(urlQuery);\n        }\n    }\n\n    queryChanged = (event) => {\n        this.setState({\n            query: event.target.value\n        })\n    };\n\n    previewPlaylist = (userId, playlistName, playlistId) => {\n        this.setState({\n            playlistName: playlistName,\n            userId: userId,\n            playlistId: playlistId,\n            redirect: true\n        })\n    };\n\n    search = () => {\n        if (this.state.query) {\n            this.props.searchPlaylists(this.state.query);\n        }\n    };\n\n    render() {\n        return(\n            <ul className=\"list-group\">\n                <Redirect to={`/search/${this.state.query}`} />\n\n                {\n                    this.state.redirect &&\n                    <Redirect to={`/details/${this.state.playlistName}/${this.state.userId}/${this.state.playlistId}/${this.state.query}`} />\n                }\n\n                <li key=\"main\" className=\"list-group-item mt-2\">\n                    <div>\n                        <div className=\"text-center\">\n                            <h2>Search for playlists</h2>\n                        </div>\n                        <div className=\"input-group\">\n                            <input\n                                id=\"search\" type=\"text\" className=\"form-control\"\n                                placeholder=\"Enter names or keywords\"\n                                value={this.state.query}\n                                onChange={this.queryChanged}\n                            />\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-outline-secondary\"\n                                        type=\"button\"\n                                        onClick={this.search}>Search\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n                <div className=\"row mt-3\" align=\"center\">\n                    {\n                        this.props.playlists.map(playlist =>\n                            <div key={playlist.id} className=\"col-sm-12 col-md-6 col-lg-4 mb-4\">\n                                <Playlist playlist={playlist} previewPlaylist={this.previewPlaylist}/>\n                            </div>\n                        )\n                    }\n                </div>\n            </ul>\n        )\n    }\n\n}","import React from 'react'\n\nexport default class Home extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        if (this.props.loggedIn) {\n            this.props.explore();\n        } else {\n            this.props.exploreAnon();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper bg-primary\">\n                <div className=\"gradient\">\n                </div>\n                <div className=\"main-jumbo jumbotron text-center\">\n                    <h1 className=\"display-4\">Smoke</h1>\n                    <p className=\"lead\">Find music faster</p>\n                    <hr className=\"my-4\"/>\n                        <p>Smoke allows you to find playlist curators that match your interests. Instead of\n                            following artists, you can explore the world of playlist creation and listen to\n                            new music every day!</p>\n                        <button className=\"btn\" onClick={() => this.el.scrollIntoView({ behavior: 'smooth' })}>\n                            <i className=\"fa fa-arrow-down\"></i>\n                        </button>\n                </div>\n                <video muted loop autoPlay=\"autoplay\" src={window.location.origin + '/smoke-client/anim.mp4'}></video>\n                <div className=\"container text-center mt-5\" ref={el => { this.el = el; }}>\n                    <h1 className=\"display-4 text-white\">Trending</h1>\n                    {\n                        this.props.exploreCards && this.props.exploreCards.length > 0 &&\n                        <div className=\"card mt-4 mb-3\">\n                            <iframe\n                                src={`https://open.spotify.com/embed/user/${this.props.exploreCards[0].playlistId.split(\"-\")[0]}/playlist/${this.props.exploreCards[0].playlistId.split(\"-\")[1]}`}\n                                width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\"\n                                allow=\"encrypted-media\" className=\"w-100 playlist\"></iframe>\n                            <div className=\"spinner-border playlist-spinner\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    }\n                    {\n                        (!this.props.exploreCards || this.props.exploreCards.length === 0) &&\n                        <div className=\"card mt-4 mb-3\">\n                            <iframe\n                                src=\"https://open.spotify.com/embed/user/spotify/playlist/37i9dQZF1DWX7rdRjOECPW\"\n                                width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\"\n                                allow=\"encrypted-media\" className=\"w-100 playlist\"></iframe>\n                            <div className=\"spinner-border playlist-spinner\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n\n\n        )\n    }\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default class Explore extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        if (this.props.loggedIn) {\n            this.props.explore();\n        } else {\n            this.props.exploreAnon();\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h2 className=\"text-white\">Explore</h2>\n                </div>\n                {\n                    this.props.exploreCards &&\n                    this.props.exploreCards.map(exploreCard =>\n                        <div key={exploreCard.id}>\n                            <div className=\"text-left\">\n                                <button className=\"btn-link\">\n                                    <Link to={\"/profile/\" + exploreCard.id} className=\"btn-link\">\n                                        <h3 className=\"text-white\">{exploreCard.displayName}</h3>\n                                    </Link>\n                                </button>\n                            </div>\n                            <div className=\"border-top\">\n                                <div className=\"card mt-4 mb-3\">\n                                    <iframe\n                                        src={`https://open.spotify.com/embed/user/${exploreCard.playlistId.split(\"-\")[0]}/playlist/${exploreCard.playlistId.split(\"-\")[1]}`}\n                                        width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\"\n                                        allow=\"encrypted-media\" className=\"w-100 playlist\"></iframe>\n                                    <div className=\"spinner-border playlist-spinner\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport default class Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const pathname = window.location.pathname;\n        const paths = pathname.split('/');\n        const playlistName = decodeURI(paths[3]);\n        const userId = paths[4];\n        const playlistId = paths[5];\n        const query = decodeURI(paths[6]);\n\n        this.state = {\n            playlistName: playlistName,\n            id: userId + \"-\" + playlistId,\n            url: `https://open.spotify.com/embed/user/${userId}/playlist/${playlistId}`,\n            query: query\n        }\n    }\n\n    back = () => {\n        this.setState({\n            redirect: true\n        })\n    };\n\n    addRemove = () => {\n        if (this.props.savedPlaylists.includes(this.state.id)) {\n            this.props.deletePlaylist(this.state.id);\n        } else {\n            this.props.addPlaylist(this.state.id);\n        }\n    };\n\n    render() {\n        return(\n            <ul className=\"list-group\">\n\n                {\n                    this.state.redirect &&\n                    <Redirect to={`/search/${this.state.query}`} />\n                }\n\n                <li key=\"main\" className=\"list-group-item\">\n                    <button className=\"btn float-left mt-2\"\n                            onClick={this.back}>\n                        <i className=\"fa fa-arrow-left\"></i>\n                    </button>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"row mt-2\">\n                            <div className=\"text-center mr-2\">\n                                <h2>{this.state.playlistName}</h2>\n                            </div>\n                            {\n                                !this.props.savedPlaylists.includes(this.state.id) &&\n                                <button className=\"btn btn-warning\" onClick={this.addRemove}>\n                                    <i className=\"fa fa-plus\"/>\n                                </button>\n                            }\n                            {\n                                this.props.savedPlaylists.includes(this.state.id) &&\n                                <button className=\"btn btn-success\" onClick={this.addRemove}>\n                                    <i className=\"fa fa-minus\"/>\n                                </button>\n                            }\n                        </div>\n                    </div>\n                </li>\n                <div className=\"row mt-3\" align=\"center\">\n                    <div className=\"card w-100 h-100\">\n                        <iframe src={this.state.url} width=\"300\" height=\"550\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" className=\"w-100 playlist\"></iframe>\n                        <div className=\"spinner-border playlist-spinner\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                </div>\n            </ul>\n        )\n    }\n\n}","import React from 'react'\n\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom'\nimport Login from './Login'\nimport Profile from './Profile'\nimport Nav from './Nav'\nimport Search from './Search'\nimport Home from './Home'\nimport Explore from './Explore'\nimport Details from './Details'\n\nexport default class Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            waitMessage: false\n        };\n\n        this.props.refreshJwt();\n\n        setTimeout(() => {\n            if (this.props.loading) {\n                this.setState({\n                    waitMessage: true\n                })\n            }\n        }, 4000);\n    }\n\n    render() {\n        return (\n            <div className=\"bg-primary contentContainer h-100\">\n                {\n                    this.state.waitMessage &&\n                    <div className=\"text-center text-white w-100 loadingMessage\">\n                        <h2>Server is starting, this may take a second...</h2>\n                    </div>\n                }\n                {\n                    this.props.loading &&\n                    <div id=\"home-jumbo\" className=\"center main-jumbo jumbotron\">\n                        <div className=\"spinner-border home-spinner\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                }\n                {\n                    !this.props.loading &&\n                    <Router basename={'smoke-client'}>\n                        <Nav {...this.props} />\n                        <Route\n                            exact path=\"/\"\n                            render={() => <Home {...this.props} />}/>\n\n                        <div className=\"container mt-2\">\n                            <div className=\"container\">\n                                <Route\n                                    exact path=\"/profile/:profileId\"\n                                    render={() => <Profile {...this.props} />}/>\n                                {\n                                    this.props.loggedIn &&\n                                    <Route\n                                        exact path=\"/profile\"\n                                        render={() => <Profile {...this.props} />}/>\n                                }\n                                {\n                                    !this.props.loggedIn &&\n                                    <Route\n                                        exact path=\"/profile\"\n                                        render={() => <Redirect to=\"/\" />}/>\n                                }\n                                <Route\n                                    exact path=\"/login\"\n                                    render={() => <Login {...this.props} />}/>\n                                <Route\n                                    exact path=\"/explore\"\n                                    render={() => <Explore {...this.props} />}/>\n                                <Route\n                                    path=\"/search\"\n                                    render={() => <Search {...this.props} />}/>\n                                <Route\n                                    path=\"/details\"\n                                    render={() => <Details {...this.props} />}/>\n                            </div>\n                        </div>\n                    </Router>\n                }\n            </div>\n        )\n    }\n}\n\n","class ActionService {\n    static myInstance = null;\n\n    static getInstance() {\n        if (ActionService.myInstance == null) {\n            ActionService.myInstance =\n                new ActionService();\n        }\n        return this.myInstance;\n    }\n\n    search = query => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/search/${query}`, {\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got search error response code \" + response.status);\n                return [];\n            }\n        }, err => {\n            console.log(\"Got error\");\n            console.log(err);\n        });\n    };\n\n    getFollows = () => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/follows`, {\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got getFollows error response code \" + response.status);\n                return [];\n            }\n        }, err => {\n            console.log(\"Got error\");\n            console.log(err);\n        });\n    };\n\n    follow = userId => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/follow/${userId}`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return true;\n            } else {\n                console.log(\"Got follow error response code \" + response.status);\n                return false;\n            }\n        }, err => {\n            console.log(\"Got error\");\n            console.log(err);\n        });\n    };\n\n    unfollow = userId => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/unfollow/${userId}`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return true;\n            } else {\n                console.log(\"Got follow error response code \" + response.status);\n                return false;\n            }\n        }, err => {\n            console.log(\"Got unfollow error\");\n            console.log(err);\n        });\n    };\n\n    getPlaylists = () => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/playlists`, {\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got getPlaylists error response code \" + response.status);\n                return [];\n            }\n        }, err => {\n            console.log(\"Got getPlaylists error\");\n            console.log(err);\n        });\n    };\n\n    addPlaylist = playlistId => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/playlists/${playlistId}`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return true;\n            } else {\n                console.log(\"Got addPlaylist error response code \" + response.status);\n                return false;\n            }\n        }, err => {\n            console.log(\"Got error\");\n            console.log(err);\n        });\n    };\n\n    deletePlaylist = playlistId => {\n        return fetch(`https://smoke-application.herokuapp.com/api/actions/playlists/${playlistId}/delete`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return true;\n            } else {\n                console.log(\"Got deletePlaylist error response code \" + response.status);\n                return false;\n            }\n        }, err => {\n            console.log(\"Got error\");\n            console.log(err);\n        });\n    };\n}\nexport default ActionService","class LoginService {\n    static myInstance = null;\n\n    static getInstance() {\n        if (LoginService.myInstance == null) {\n            LoginService.myInstance =\n                new LoginService();\n        }\n        return this.myInstance;\n    }\n\n    getUser = () => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/`, {\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got getUser error response code \" + response.status);\n                return undefined;\n            }\n        }, err => {\n            console.log(\"Got getUser error\");\n            console.log(err);\n        });\n    };\n\n    getProfile = userId => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/profile/${userId}`, {\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got getProfile error response code \" + response.status);\n                return undefined;\n            }\n        }, err => {\n            console.log(\"Got getProfile error\");\n            console.log(err);\n        });\n    };\n\n    refreshJwt = () => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/refreshJWT`, {\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got login error response code \" + response.status);\n                return undefined;\n            }\n        }, err => {\n            console.log(\"Got refreshJwt error\");\n            console.log(err);\n        });\n    };\n\n    login = (email, password) => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/login`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                email: email,\n                password: password\n            }),\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got login error response code \" + response.status);\n                return undefined;\n            }\n        }, err => {\n            console.log(\"Got login error\");\n            console.log(err);\n        });\n    };\n\n    logout = () => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/logout`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return true;\n            } else {\n                console.log(\"Got logout error response code \" + response.status);\n                return false;\n            }\n        }, err => {\n            console.log(\"Got logout error\");\n            console.log(err);\n        });\n    };\n\n    register = (email, displayName, password, role) => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/createUser`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                email: email,\n                displayName: displayName,\n                password: password,\n                role: role\n            }),\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got register error response code \" + response.status);\n                return undefined;\n            }\n        }, err => {\n            console.log(\"Got register error\");\n            console.log(err);\n        });\n    };\n\n    updateUser = (userId, email, displayName, password, role) => {\n        return fetch(`https://smoke-application.herokuapp.com/api/users/updateUser`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'PUT',\n            body: JSON.stringify({\n                id: userId,\n                email: email,\n                displayName: displayName,\n                password: password,\n                role: role\n            }),\n            credentials: 'include'\n        }).then(response => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                console.log(\"Got updateUser error response code \" + response.status);\n                return undefined;\n            }\n        }, err => {\n            console.log(\"Got updateUser error\");\n            console.log(err);\n        });\n    }\n}\nexport default LoginService","import Main from \"../components/Main\";\nimport {connect} from 'react-redux'\nimport ActionService from '../services/ActionService'\nimport LoginService from '../services/LoginService'\n\nconst actionService = ActionService.getInstance();\nconst loginService = LoginService.getInstance();\n\nconst stateToPropMapper = state => ({\n    user: state.user,\n    profile: state.profile,\n    profileLoaded: state.profileLoaded,\n    displayName: state.displayName,\n    loggedIn: state.loggedIn,\n    loading: state.loading,\n    playlists: state.playlists,\n    savedPlaylists: state.savedPlaylists,\n    exploreCards: state.exploreCards\n});\n\nconst propsToDispatcher = dispatch => ({\n    refreshJwt: () => {\n        dispatch({ type: \"LOADING\" });\n        loginService\n            .refreshJwt()\n            .then(user => {\n                if (user !== undefined) {\n                    dispatch({ type: \"LOG_IN\", user: user });\n\n                    actionService.getFollows().then(follows => {\n                        dispatch({ type: \"SET_FOLLOWS\", follows: follows });\n\n                        actionService.getPlaylists().then(playlists => {\n                            dispatch({ type: \"SET_PLAYLISTS\", playlists: playlists });\n                            dispatch({ type: \"LOADING_COMPLETE\" });\n                        });\n                    });\n\n                } else {\n                    console.log(\"Login failed, user is undefined\");\n                    dispatch({ type: \"LOADING_COMPLETE\" });\n                }\n            })\n    },\n    login: (email, password) => {\n        dispatch({ type: \"LOADING\" });\n        loginService\n            .login(email, password)\n            .then(user => {\n                if (user !== undefined) {\n                    dispatch({ type: \"LOG_IN\", user: user });\n\n                    actionService.getFollows().then(follows => {\n                        dispatch({ type: \"SET_FOLLOWS\", follows: follows });\n\n                        actionService.getPlaylists().then(playlists => {\n                            dispatch({ type: \"SET_PLAYLISTS\", playlists: playlists });\n                            dispatch({ type: \"LOADING_COMPLETE\" });\n                        });\n                    });\n\n                } else {\n                    console.log(\"Login failed, user is undefined\");\n                    dispatch({ type: \"LOADING_COMPLETE\" });\n                }\n            })\n    },\n    register: (email, displayName, password, role) => {\n        dispatch({ type: \"LOADING\" });\n        loginService\n            .register(email, displayName, password, role)\n            .then(user => {\n                if (user !== undefined) {\n                    loginService\n                        .login(email, password)\n                        .then(user => {\n                            dispatch({type: \"LOG_IN\", user: user});\n\n                            actionService.getFollows().then(follows => {\n                                dispatch({type: \"SET_FOLLOWS\", follows: follows});\n\n                                actionService.getPlaylists().then(playlists => {\n                                    dispatch({type: \"SET_PLAYLISTS\", playlists: playlists});\n                                    dispatch({type: \"LOADING_COMPLETE\"});\n                                });\n                            });\n                        });\n                } else {\n                    console.log(\"Login failed, user is undefined\");\n                    dispatch({ type: \"LOADING_COMPLETE\" });\n                }\n            })\n    },\n    updateUser: (userId, email, displayName, password, role) => {\n        dispatch({ type: \"LOADING\" });\n        loginService\n            .updateUser(userId, email, displayName, password, role)\n            .then(user => {\n                console.log(\"RETURNED USER:\");\n                console.log(user);\n                if (user !== undefined) {\n                    dispatch({ type: \"LOG_IN\", user: user });\n\n                    actionService.getFollows().then(follows => {\n                        dispatch({ type: \"SET_FOLLOWS\", follows: follows });\n\n                        actionService.getPlaylists().then(playlists => {\n                            dispatch({ type: \"SET_PLAYLISTS\", playlists: playlists });\n                            dispatch({ type: \"LOADING_COMPLETE\" });\n                        });\n                    });\n\n                } else {\n                    console.log(\"Login failed, user is undefined\");\n                    dispatch({ type: \"LOADING_COMPLETE\" });\n                }\n            })\n    },\n    logout: () => {\n        loginService\n            .logout()\n            .then(response => {\n                dispatch({ type: \"LOG_OUT\" });\n                document.cookie = \"jwtToken= ; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\"\n            });\n    },\n    getProfile: userId => {\n        dispatch({ type: \"HIDE_PROFILE\" });\n        loginService\n            .getProfile(userId)\n            .then(profile => {\n                dispatch({\n                    type: \"LOAD_PROFILE\",\n                    profile: profile\n                });\n            })\n    },\n    follow: userId => {\n        actionService\n            .follow(userId)\n            .then(response => {\n                if (response) {\n                    loginService\n                        .getProfile(userId)\n                        .then(profile => {\n                            dispatch({\n                                type: \"LOAD_PROFILE\",\n                                profile: profile\n                            });\n                        })\n\n                    actionService\n                        .getFollows()\n                        .then(follows => {\n                            dispatch({\n                                type: \"SET_FOLLOWS\",\n                                follows: follows\n                            });\n                        })\n                } else {\n                    console.log(\"Follow failed\");\n                }\n            })\n    },\n    unfollow: userId => {\n        actionService\n            .unfollow(userId)\n            .then(response => {\n                if (response) {\n                    loginService\n                        .getProfile(userId)\n                        .then(profile => {\n                            dispatch({\n                                type: \"LOAD_PROFILE\",\n                                profile: profile\n                            });\n                        })\n\n                    actionService\n                        .getFollows()\n                        .then(follows => {\n                            dispatch({\n                                type: \"SET_FOLLOWS\",\n                                follows: follows\n                            });\n                        })\n                } else {\n                    console.log(\"Unfollow failed\");\n                }\n            })\n    },\n    searchPlaylists: query => {\n        actionService\n            .search(query)\n            .then(response => {\n                dispatch({\n                    type: \"SEARCH_PLAYLISTS\",\n                    playlists: response\n                });\n            })\n    },\n    addPlaylist: playlistId => {\n        actionService\n            .addPlaylist(playlistId)\n            .then(response => {\n                if (response) {\n                    actionService\n                        .getPlaylists()\n                        .then(playlists => {\n                            dispatch({\n                                type: \"SET_PLAYLISTS\",\n                                playlists: playlists\n                            });\n                        })\n                } else {\n                    console.log(\"addPlaylist failed\");\n                }\n            })\n    },\n    deletePlaylist: playlistId => {\n        actionService\n            .deletePlaylist(playlistId)\n            .then(response => {\n                if (response) {\n                    actionService\n                        .getPlaylists()\n                        .then(playlists => {\n                            dispatch({\n                                type: \"SET_PLAYLISTS\",\n                                playlists: playlists\n                            });\n                        })\n                } else {\n                    console.log(\"deletePlaylist failed\");\n                }\n            })\n    },\n    explore: () => {\n        const explore = [];\n        actionService\n            .getFollows()\n            .then(follows => {\n                console.log(\"Follows:\");\n                console.log(follows);\n\n                if (follows.length > 0) {\n                    follows.forEach((follow, index) => {\n                        loginService\n                            .getProfile(follow)\n                            .then(profile => {\n                                if (profile.playlists.length > 0) {\n                                    explore.push({\n                                        \"id\": profile.id,\n                                        \"displayName\": profile.displayName,\n                                        \"playlistId\": profile.playlists[0]\n                                    });\n\n                                    if (index === follows.length - 1) {\n                                        dispatch({\n                                            type: \"SET_EXPLORE\",\n                                            explore: explore\n                                        });\n                                    }\n                                }\n                            })\n                    })\n                } else {\n                    dispatch({type: \"SET_EXPLORE_ANON\"});\n                }\n            })\n    },\n    exploreAnon: () => {\n        dispatch({type: \"SET_EXPLORE_ANON\"});\n    }\n});\n\nconst MainContainer = connect(\n    stateToPropMapper, propsToDispatcher\n)(Main);\n\nexport default MainContainer","import React from 'react'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport projectReducer from '../reducers/projectReducer'\nimport MainContainer from \"../containers/MainContainer\";\n\nconst store = createStore(projectReducer);\n\nexport default class Project extends React.Component {\n    render() {\n        return(\n            <Provider store={store}>\n                <MainContainer/>\n            </Provider>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Project from './containers/Project'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './theme.css'\n\nReactDOM.render(\n    <Project/>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}